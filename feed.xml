<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-12-04T17:39:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>OctopressからMiddlemanに移行した</title>
    <link rel="alternate" href="http://blog.url.com/2013/12/05/transfer-from-octopress-to-middleman/"/>
    <id>http://blog.url.com/2013/12/05/transfer-from-octopress-to-middleman/</id>
    <published>2013-12-04T17:39:00Z</published>
    <updated>2013-12-07T09:58:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;今年のはじめにWordpressからOctopressに移行したけど、結局ブログを書くようにはならなかったよ&amp;hellip;
Middlemanを見てみたらよさげだったので、もう一度書き始めるきっかけに再度移行してみた。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Octopressでしっくり来なかったところ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;テンプレートエンジンに挫折&lt;br&gt;
Liquidの記法が絶望的に覚えられない&amp;hellip;&lt;/li&gt;
&lt;li&gt;ファイル構成&lt;br&gt;
Octopressはgem/コマンドラインでの管理ツールが提供されておらず、cloneしたOctopressそのものからブログを構築していく。
Octopress自体のバージョンアップをしたい場合はpullして持ってくることになる。
本文以外のところのタグを変更しようとしてプラグインを独自にいじっているとOctopress本体の更新とのコンフリクトが厳しい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_1"&gt;Middlemanを触ってみて&lt;/h2&gt;

&lt;h3 id="toc_2"&gt;よさげなところ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;構成が単純&lt;br&gt;
sources以下にテンプレートやassetsを放り込んでいけばOK&lt;/li&gt;
&lt;li&gt;Railsライク&lt;br&gt;
ヘルパー名やディレクトリ構成等、明らかにRailsを意識して作っている感じ。
いいか悪いかはともかく、Railsユーザには直観が働くようにできている。&lt;/li&gt;
&lt;li&gt;好きなテンプレートエンジンが選べる&lt;br&gt;
今回は初&lt;a href="http://slim-lang.com"&gt;Slim&lt;/a&gt;にしてみた。&lt;/li&gt;
&lt;li&gt;マルチブログが簡単&lt;br&gt;
Webサーバの設定に頼ることなく、複数ブログが簡単につくれる。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_3"&gt;いまいちなところ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ブログ機能自体は貧弱&lt;br&gt;
主眼は静的サイトジェネレータなので、
middleman-blog が提供する機能は記事管理/タグ付け/年別アーカイブ/ページネーションぐらい。
cssもデフォルトだとなし。プロジェクト生成直後に見える画面↓なのは流石にどうだろう&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/uskanda/11209451975/" title="middleman-blog-default by uskanda, on Flickr"&gt;&lt;img src="http://farm6.staticflickr.com/5493/11209451975_540c5f2e83_n.jpg" width="320" height="183" alt="middleman-blog-default"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;デプロイ設定
github-pagesを強く意識しているOctopressよりはデプロイ設定が面倒な感じ。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Example Article</title>
    <link rel="alternate" href="http://blog.url.com/2012/01/01/example-article/"/>
    <id>http://blog.url.com/2012/01/01/example-article/</id>
    <published>2011-12-31T15:00:00Z</published>
    <updated>2013-12-07T09:58:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This is an example article. You probably want to delete it and write your own articles!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>RailsによるアジャイルWebアプリケーション開発 第4版が出てたので買った</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/04/agile-development-with-rails-4th-ed/"/>
    <id>http://blog.url.com/2011/12/04/agile-development-with-rails-4th-ed/</id>
    <published>2011-12-03T15:00:00Z</published>
    <updated>2013-12-07T09:58:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;今まで高かったから実は買ったことなかったRailsのバイブル。&amp;hellip;昔4000円台だったよね？
&lt;a href="http://estore.ohmsha.co.jp/titles/978427406866P"&gt;PDF&lt;/a&gt;版がすぐ出てくれるのはすごくありがたい。&lt;/p&gt;

&lt;p&gt;まとめて読む時間は取れそうにないけど、気がついたところは箇条書きでここにメモっていこう。とりあえずはこまかいところ&amp;hellip;
&lt;ul&gt;
  &lt;li&gt;Rails3.1はRuby1.9利用時はScaffoldでRuby1.9のハッシュ記法を使う。あれ？そうだっけ？っと思って試してみたらホントだった&lt;/li&gt;
  &lt;li&gt;link_toの飛び先をcontroller, action, idのハッシュで指定する記法は載ってすらいない&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=uasmks-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274068668" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>yasnippet(dropdown-list)が列ハイライト利用時にも表示が崩れないようにする</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/03/fix-yasnippet-when-using-col-highlight/"/>
    <id>http://blog.url.com/2011/12/03/fix-yasnippet-when-using-col-highlight/</id>
    <published>2011-12-02T15:00:00Z</published>
    <updated>2013-12-07T09:58:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;数年ぶりに設定を見直し中なので、どこまでもEmacs小ネタ。
yasnippetの補完候補表示等に利用されるdropdown-listの表示が
現在のカーソル位置の列をハイライトするcol-highlight利用時に崩れるので、
dropdown-list利用時にcol-highlightを一時停止するようにした。
&lt;script src="https://gist.github.com/1424152.js"&gt; &lt;/script&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>.rvmrcを使っているRailsプロジェクトでrinariからrails server,consoleを呼ぶ</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/02/rvm-rinari/"/>
    <id>http://blog.url.com/2011/12/02/rvm-rinari/</id>
    <published>2011-12-01T15:00:00Z</published>
    <updated>2013-12-07T09:58:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;RVMで通常利用(rvm use &amp;ndash;default)している以外のRubyを.rvmrcで指定している&lt;br&gt;
Railsプロジェクトで、rinariをそのまま使うとEmacsからのserver, console呼び出しができないので、&lt;br&gt;
力技でRVMを変更することにした。    &lt;/p&gt;

&lt;script src="https://gist.github.com/1390182.js"&gt; &lt;/script&gt;

&lt;p&gt;rvm.elとrinari前提。    &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>anythingのspotlight検索項目でバイナリファイルを開くときにMacアプリケーションを使う</title>
    <link rel="alternate" href="http://blog.url.com/2011/11/20/anything-spotlight/"/>
    <id>http://blog.url.com/2011/11/20/anything-spotlight/</id>
    <published>2011-11-19T15:00:00Z</published>
    <updated>2013-12-07T09:58:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Spotlightの検索結果PDFを直接Preview.appで開きたいんでつくったー。&lt;br&gt;
&lt;script src="https://gist.github.com/1379387.js"&gt; &lt;/script&gt;&lt;br&gt;
Macアプリケーションで開きたい拡張子をanything-c-source-mac-spotlight2-open-file-extensionsに加える。&lt;br&gt;
anything-c-source-mac-spotlight2をanythingのanything-c-source-mac-spotlightの代わりにsourceとして使えばOK。&lt;br&gt;
ファイル開く動作全般に適用しようかとも思ったけど、PDFや画像を開くケースってspotlight検索ぐらいな気がしたので、&lt;br&gt;
ひとまず満足。&lt;/p&gt;
</content>
  </entry>
</feed>
