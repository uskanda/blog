<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-12-04T17:39:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>OctopressからMiddlemanに移行した</title>
    <link rel="alternate" href="http://blog.url.com/2013/12/05/transfer-from-octopress-to-middleman/"/>
    <id>http://blog.url.com/2013/12/05/transfer-from-octopress-to-middleman/</id>
    <published>2013-12-04T17:39:00Z</published>
    <updated>2013-12-08T04:11:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;今年のはじめにWordpressからOctopressに移行したけど、結局ブログを書くようにはならなかったよ&amp;hellip;
Middlemanを見てみたらよさげだったので、もう一度書き始めるきっかけに再度移行してみた。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Octopressでしっくり来なかったところ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;テンプレートエンジンに挫折&lt;br&gt;
Liquidの記法が絶望的に覚えられない&amp;hellip;&lt;/li&gt;
&lt;li&gt;ファイル構成&lt;br&gt;
Octopressはgem/コマンドラインでの管理ツールが提供されておらず、cloneしたOctopressそのものからブログを構築していく。
Octopress自体のバージョンアップをしたい場合はpullして持ってくることになる。
本文以外のところのタグを変更しようとしてプラグインを独自にいじっているとOctopress本体の更新とのコンフリクトが厳しい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_1"&gt;Middlemanを触ってみて&lt;/h2&gt;

&lt;h3 id="toc_2"&gt;よさげなところ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;構成が単純&lt;br&gt;
sources以下にテンプレートやassetsを放り込んでいけばOK&lt;/li&gt;
&lt;li&gt;Railsライク&lt;br&gt;
ヘルパー名やディレクトリ構成等、明らかにRailsを意識して作っている感じ。
いいか悪いかはともかく、Railsユーザには直観が働くようにできている。&lt;/li&gt;
&lt;li&gt;好きなテンプレートエンジンが選べる&lt;br&gt;
今回は初&lt;a href="http://slim-lang.com"&gt;Slim&lt;/a&gt;にしてみた。&lt;/li&gt;
&lt;li&gt;マルチブログが簡単&lt;br&gt;
Webサーバの設定に頼ることなく、複数ブログが簡単につくれる。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_3"&gt;いまいちなところ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ブログ機能自体は貧弱&lt;br&gt;
主眼は静的サイトジェネレータなので、
middleman-blog が提供する機能は記事管理/タグ付け/年別アーカイブ/ページネーションぐらい。
cssもデフォルトだとなし。プロジェクト生成直後に見える画面↓なのは流石にどうだろう&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flickr.com/photos/uskanda/11209451975/" title="middleman-blog-default by uskanda, on Flickr"&gt;&lt;img src="http://farm6.staticflickr.com/5493/11209451975_540c5f2e83_n.jpg" width="320" height="183" alt="middleman-blog-default"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;デプロイ設定
github-pagesを強く意識しているOctopressよりはデプロイ設定が面倒な感じ。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>新年の目標を共有するサービス Kotoshiwaをリリースしました</title>
    <link rel="alternate" href="http://blog.url.com/2012/01/01/release-kotoshiwa/"/>
    <id>http://blog.url.com/2012/01/01/release-kotoshiwa/</id>
    <published>2011-12-31T15:00:00Z</published>
    <updated>2013-12-08T04:11:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;2011年、あけましておめでとうございます。
本年もよろしくお願いします。&lt;/p&gt;

&lt;p&gt;今年こそウェブサービスをリリースしたいので、&lt;br&gt;
その気持ちをあらわすべく、手始めに&lt;br&gt;
&amp;ldquo;今年こそ○○する&amp;quot;という新年の目標を共有するウェブサービスを作成しました。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://kotoshiwa.com" title="Kotoshiwa - 新年の目標を共有しよう"&gt;Kotoshiwa - 新年の目標を共有しよう&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://kotoshiwa.com" title="Kotoshiwa - 新年の目標を共有しよう"&gt;&lt;a href="http://kotoshiwa.com"&gt;http://kotoshiwa.com&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitterでログインして、新年の目標を100文字以内で投稿するだけです！
是非利用してみてください！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>まさかのカブリ</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/04/blog-nameduplication/"/>
    <id>http://blog.url.com/2011/12/04/blog-nameduplication/</id>
    <published>2011-12-03T15:00:00Z</published>
    <updated>2013-12-08T04:11:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;ブログをまともに再開したのだけど、
適当につけていたブログ名がまさか会社さんとカブっていたとは&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://fugapiyo.jp/" target="_blank"&gt;株式会社フガピヨ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;新しいブログ名急いで考えよう&amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>RailsによるアジャイルWebアプリケーション開発 第4版が出てたので買った</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/04/agile-development-with-rails-4th-ed/"/>
    <id>http://blog.url.com/2011/12/04/agile-development-with-rails-4th-ed/</id>
    <published>2011-12-03T15:00:00Z</published>
    <updated>2013-12-08T04:11:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;今まで高かったから実は買ったことなかったRailsのバイブル。&amp;hellip;昔4000円台だったよね？
&lt;a href="http://estore.ohmsha.co.jp/titles/978427406866P"&gt;PDF&lt;/a&gt;版がすぐ出てくれるのはすごくありがたい。&lt;/p&gt;

&lt;p&gt;まとめて読む時間は取れそうにないけど、気がついたところは箇条書きでここにメモっていこう。とりあえずはこまかいところ&amp;hellip;
&lt;ul&gt;
  &lt;li&gt;Rails3.1はRuby1.9利用時はScaffoldでRuby1.9のハッシュ記法を使う。あれ？そうだっけ？っと思って試してみたらホントだった&lt;/li&gt;
  &lt;li&gt;link_toの飛び先をcontroller, action, idのハッシュで指定する記法は載ってすらいない&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=uasmks-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274068668" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>Rsenseでの補完時に引数等を自動補完する</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/04/ac-rsense-yas-expand/"/>
    <id>http://blog.url.com/2011/12/04/ac-rsense-yas-expand/</id>
    <published>2011-12-03T15:00:00Z</published>
    <updated>2013-12-08T04:11:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Emacsの整理にあたり、いつか試そうと思ってたけど使ってなかった
&lt;a href="http://cx4a.org/software/rsense/index.ja.html" target="_blank"&gt;Rsense&lt;/a&gt;を導入してみたらすごく便利だった！&lt;/p&gt;

&lt;p&gt;組み込みライブラリのメソッド名の補完等はバッチリなんで、せっかくなんで
yasnippetと連携させて引数やブロック有無なども補完できるようにしてみた。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/uskanda/ac-rsense-yas-expand"&gt;&lt;a href="https://github.com/uskanda/ac-rsense-yas-expand"&gt;https://github.com/uskanda/ac-rsense-yas-expand&lt;/a&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Emacs, auto-completeでのRsense利用が前提。
力技でRefeから組み込みライブラリの主要メソッドのsnippetを作って、
これまた力技でauto-completeにRsenseから伝えられたクラス情報を横取りして、yasnippetの起動条件に渡してる。
これで組み込みライブラリに関していえばIDEと遜色ないのではないかと。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>yasnippet(dropdown-list)が列ハイライト利用時にも表示が崩れないようにする</title>
    <link rel="alternate" href="http://blog.url.com/2011/12/03/fix-yasnippet-when-using-col-highlight/"/>
    <id>http://blog.url.com/2011/12/03/fix-yasnippet-when-using-col-highlight/</id>
    <published>2011-12-02T15:00:00Z</published>
    <updated>2013-12-08T04:11:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;数年ぶりに設定を見直し中なので、どこまでもEmacs小ネタ。
yasnippetの補完候補表示等に利用されるdropdown-listの表示が
現在のカーソル位置の列をハイライトするcol-highlight利用時に崩れるので、
dropdown-list利用時にcol-highlightを一時停止するようにした。
&lt;script src="https://gist.github.com/1424152.js"&gt; &lt;/script&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
